#!/bin/bash
#
# Perform necessary one-integration-vmcatcher setup steps
# after package is installed.
#

PROGNAME=$(basename $0)
INSTALLER_DIR=$(dirname $0)
CRON_SCRIPT=/opt/one-integration-vmcatcher/bin/one-integration-vmcatcher
CRON_JOB=/opt/one-integration-vmcatcher/etc/one-integration-vmcatcher-cronjob
VMCATCHER_ENV=/opt/one-integration-vmcatcher/etc/vmcatcher-env
USAGE="usage: $0"

NIFTY=nifty
NIFTY_USER=${NIFTY}
NIFTY_GROUP=${NIFTY}
NIFTY_CONF="/etc/${NIFTY}/${NIFTY}.yml"
NIFTY_DEFAULT_APPLIANCE_DIR="/var/spool/${NIFTY}/appliances"

ITCHY=itchy
ITCHY_USER=${ITCHY}
ITCHY_GROUP=${ITCHY}
ITCHY_CONF="/etc/${ITCHY}/${ITCHY}.yml"
ITCHY_DEFAULT_APPLIANCE_DIR="/var/spool/${ITCHY}/descriptors"

VMCATCHER=vmcatcher
VMCATCHER_USER=${VMCATCHER}
VMCATCHER_GROUP=${VMCATCHER}
VMCATCHER_CONF_DIR="/etc/${VMCATCHER}/"

APPLIANCES_DIR="/var/spool/${ITCHY}/descriptors"

function error_exit
{
  echo "${PROGNAME}: ${1:-"Unknown Error"}" 1>&2
  exit 1
}

echo "Setting user groups and privileges..."

# add vmcatcher user if doesn't exits
id -u ${VMCATCHER_USER} > /dev/null 2>&1
if [ "$?" -ne "0" ]; then
  useradd --system --shell /bin/false --home-dir "/var/lib/${VMCATCHER_USER}" ${VMCATCHER_USER} || error_exit "Cannot add user '${VMCATCHER_USER}'"
  usermod -L ${VMCATCHER_USER} || error_exit "Cannot lock user '${VMCATCHER_USER}'"
fi

# set groups for vmcatcher
grep -q "^${ITCHY_GROUP}:" /etc/group > /dev/null 2>&1
if [ "$?" -ne "0" ]; then
  error_exit "Cannot find group '${ITCHY_GROUP}'"
fi

usermod -aG ${ITCHY_GROUP} ${VMCATCHER_USER} || error_exit "Cannot add user '${VMCATCHER_USER}' to group '${ITCHY_GROUP}'"

# set groups for itchy
id -u ${ITCHY_USER} > /dev/null 2>&1
if [ "$?" -ne "0" ]; then
  error_exit "Cannot find user '${ITCHY_USER}'"
fi

grep -q "^${NIFTY_GROUP}:" /etc/group > /dev/null 2>&1
if [ "$?" -ne "0" ]; then
  error_exit "Cannot find group '${NIFTY_GROUP}'"
fi

usermod -aG ${NIFTY_GROUP} ${ITCHY_USER} || error_exit "Cannot add user '${ITCHY_USER}' to group '${NIFTY_GROUP}'"

echo "Setting configuration..."
# set itchy configuration
grep -q ${ITCHY_DEFAULT_APPLIANCE_DIR} ${ITCHY_CONF} > /dev/null 2>&1
if [ "$?" -eq "0" ]; then
  sed -i "s|${ITCHY_DEFAULT_APPLIANCE_DIR}|${APPLIANCES_DIR}|g" ${ITCHY_CONF} || error_exit "Could not set appliance dir for '${ITCHY_CONF}'"
else
  echo "${ITCHY_CONF} has already been changed. Please do the modification manually"
fi

# set nifty configuration
grep -q ${NIFTY_DEFAULT_APPLIANCE_DIR} ${NIFTY_CONF} > /dev/null 2>&1
if [ "$?" -eq "0" ]; then
  sed -i "s|${NIFTY_DEFAULT_APPLIANCE_DIR}|${APPLIANCES_DIR}|g" ${NIFTY_CONF} || error_exit "Could not set appliance dir for '${NIFTY_CONF}'"
else
  echo "${NIFTY_CONF} has already been changed. Please do the modification manually"
fi

# adding vmcatcher environment file
mkdir -p ${VMCATCHER_CONF_DIR} || error_exit "Could not create vmcatcher configuration directory '${VMCATCHER_CONF_DIR}'"
cp -n ${VMCATCHER_ENV} ${VMCATCHER_CONF_DIR} || error_exit "Could not copy vmcatcher configuration file '${VMCATCHER_ENV}'"

# adding execution flag to cronjob script
chmod +x ${CRON_SCRIPT} || error_exit "Could not set execution flag for '${CRON_SCRIPT}'"

# setup cronjob
echo "Registering a cron job"
cp ${CRON_JOB} /etc/cron.d/ || error_exit "Could not register cron job '${CRON_JOB}'"

echo "Thank you for installing one-integration-vmcatcher!"

exit 0
