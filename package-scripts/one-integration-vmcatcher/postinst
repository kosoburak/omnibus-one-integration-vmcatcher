#!/bin/bash
#
# Perform necessary one-integration-vmcatcher setup steps
# after package is installed.
#

PROGNAME=$(basename $0)
INSTALLER_DIR=$(dirname $0)
BASE_PATH=/opt/one-integration-vmcatcher
CRON_SCRIPT=/bin/one-integration-vmcatcher
CRON_JOB=/etc/cron.d/one-integration-vmcatcher
INIT_SCRIPT=/etc/init.d/one-integration-vmcatcher-cron
VMCATCHER_ENV=/etc/vmcatcher/vmcatcher-env
ORIGINAL_CRON_SCRIPT="${BASE_PATH}/${CRON_SCRIPT}"
ORIGINAL_CRON_JOB="${BASE_PATH}/${CRON_JOB}"
ORIGINAL_INIT_SCRIPT="${BASE_PATH}/${INIT_SCRIPT}"
ORIGINAL_VMCATCHER_ENV="${BASE_PATH}/${VMCATCHER_ENV}"
USAGE="usage: $0"

NIFTY=nifty
NIFTY_USER=${NIFTY}
NIFTY_GROUP=${NIFTY}
NIFTY_CONF="/etc/${NIFTY}/${NIFTY}.yml"
NIFTY_DEFAULT_APPLIANCE_DIR="/var/spool/${NIFTY}/appliances"

ITCHY=itchy
ITCHY_USER=${ITCHY}
ITCHY_GROUP=${ITCHY}
ITCHY_CONF="/etc/${ITCHY}/${ITCHY}.yml"
ITCHY_DEFAULT_APPLIANCE_DIR="/var/spool/${ITCHY}/descriptors"
ITCHY_DEFAULT_OUTPUT_DIR="/var/spool/${ITCHY}/output"

VMCATCHER=vmcatcher
VMCATCHER_CONF_DIR="/etc/${VMCATCHER}/"

APPLIANCES_DIR="/var/spool/${ITCHY}/descriptors"

function error_exit
{
  echo "${PROGNAME}: ${1:-"Unknown Error"}" 1>&2
  exit 1
}

echo "Setting user groups and privileges..."

# set groups for nifty
id -u ${NIFTY_USER} > /dev/null 2>&1
if [ "$?" -ne "0" ]; then
  error_exit "Cannot find user '${NIFTY_USER}'"
fi

grep -q "^${ITCHY_GROUP}:" /etc/group > /dev/null 2>&1
if [ "$?" -ne "0" ]; then
  error_exit "Cannot find group '${ITCHY_GROUP}'"
fi

usermod -aG ${ITCHY_GROUP} ${NIFTY_USER} || error_exit "Cannot add user '${NIFTY_USER}' to group '${ITCHY_GROUP}'"

echo "Setting configuration..."
# set itchy configuration
grep -q ${ITCHY_DEFAULT_APPLIANCE_DIR} ${ITCHY_CONF} > /dev/null 2>&1
if [ "$?" -eq "0" ] && [ -d ${APPLIANCES_DIR} ]; then
  sed -i "s|${ITCHY_DEFAULT_APPLIANCE_DIR}|${APPLIANCES_DIR}|g" ${ITCHY_CONF} || error_exit "Could not set appliance dir for '${ITCHY_CONF}'"
  chmod 775 ${APPLIANCES_DIR} || error_exit "Could not chmod on '${APPLIANCES_DIR}'"
else
  echo "${ITCHY_CONF} has already been changed. Please do the modification manually and make sure the group has write rights on appliance directory."
fi

grep -q ${ITCHY_DEFAULT_OUTPUT_DIR} ${ITCHY_CONF} > /dev/null 2>&1
if [ "$?" -eq "0" ] && [ -d ${ITCHY_DEFAULT_OUTPUT_DIR} ]; then
  chmod 775 ${ITCHY_DEFAULT_OUTPUT_DIR} || error_exit "Could not chmod on '${ITCHY_DEFAULT_OUTPUT_DIR}'"
else
  echo "${ITCHY_CONF} has already been changed. Please make sure the group has write rights on output directory."
fi

# set nifty configuration
grep -q ${NIFTY_DEFAULT_APPLIANCE_DIR} ${NIFTY_CONF} > /dev/null 2>&1
if [ "$?" -eq "0" ] && [ -d ${APPLIANCES_DIR} ]; then
  sed -i "s|${NIFTY_DEFAULT_APPLIANCE_DIR}|${APPLIANCES_DIR}|g" ${NIFTY_CONF} || error_exit "Could not set appliance dir for '${NIFTY_CONF}'"
else
  echo "${NIFTY_CONF} has already been changed. Please do the modification manually."
fi

# adding vmcatcher environment file
mkdir -p ${VMCATCHER_CONF_DIR} || error_exit "Could not create vmcatcher configuration directory '${VMCATCHER_CONF_DIR}'"
chmod -x ${ORIGINAL_VMCATCHER_ENV} || error_exit "Could not remove execution flag from vmcatcher configuration file '${ORIGINAL_VMCATCHER_ENV}'"
cp -n ${ORIGINAL_VMCATCHER_ENV} ${VMCATCHER_ENV} || error_exit "Could not copy vmcatcher configuration file '${ORIGINAL_VMCATCHER_ENV}'"

# adding execution flag to cronjob script
chmod +x ${ORIGINAL_CRON_SCRIPT} || error_exit "Could not set execution flag for '${ORIGINAL_CRON_SCRIPT}'"

# setup cronjob
echo "Registering a cron job"
cp ${ORIGINAL_CRON_JOB} ${CRON_JOB} || error_exit "Could not register cron job '${ORIGINAL_CRON_JOB}'"

# setup init script
echo "Registering an init script"
cp ${ORIGINAL_INIT_SCRIPT} ${INIT_SCRIPT} || error_exit "Could not register init script '${ORIGINAL_INIT_SCRIPT}'"
chmod +x

echo "Thank you for installing one-integration-vmcatcher!"

exit 0
